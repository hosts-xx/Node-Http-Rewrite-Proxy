This module proxies and rewrites HTTP requests of all types.
For this you can, if you want, use regular expressions.


Example 1
------------------------------

var nhrp = require("nhrp");
var fs = require("fs");


function rewrite(request){

    /*  change some request information like this:

    request.host = "newdomain.com";     //for proxying to a new host
    request.port = 456;                 //for proxying to a new port
    request.url = "/a/b/c";             //for changing the url

    request.protocol = "HTTP/1.0";      //USE THIS WHEN THE REQUEST IS NOT A WEBSOCKET!
                                        //Otherwise, the connection wonÂ´t close.

    request.secure = false;             //for proxying https/wss to http/ws or vice versa
    
    request.Header["User-Agent"] = "xyz";   //to change some headers

    //this would result in

    GET /a/b/c HTTP/1.0
    User-Agent: xyz

    */

    //PLEASE NOTE THAT THINGS THAT YOU DO NOT CHANGE WILL BE KEPT


    return function(response){

        /* change some response information like this:

        response.code = 200;                //change the response code
        response.message = "OK";            //change the response message
        response.protocol = "HTTP/1.1";     //change the response protocol

        response.headers["Host"] = "olddomain.com"; //change the response headers
                                                    //this will be useful to match the request origin

        //this would result in
        HTTP/1.1 200 OK
        Host: olddomain.com
        


        */


    }
}


nhrp.createServer(rewrite).listen(80);              //create a server (http/ws) that listens for connections on port 80
nhrp.createSecureServer({                           //create a secure server (https/wss) that listens for connections on port 443
    cert:fs.readFileSync("/root/certificate.pem"),
    key:fs.readFileSync("/root/key.pem")
},rewrite).listen(443);                             //both server will now be rewritten by your rewrite function

